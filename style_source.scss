//Scss variables
$primary-color: #14a599;
$darker-color: #008378;
$lighter-color: rgb(190, 218, 215);
$text-color: black;
$bg-color: #fcfcfc;


//to check layout
/* div { border: 0.5px solid orange; } */

.text-unselectable {
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    -khtml-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

.content {
    max-width: 1100px;
    margin: auto;
}

.svgdiv {
    width: 100%;
    height: 800px;
    overflow: scroll;
    border: 1px solid #ccc;
    border-radius: 2px;
    background-color: $bg-color;
    margin-bottom: 20px;
}

/* indented tree styling */
.tree text {
    /* font-family: sans-serif; */
    font-size: 0.9em;
    fill: $text-color;
}
/* tree nodelinks */
.hierarchy-guide, .nodelink {
    fill: none;
    stroke: #ddd;
    stroke-width: 1px;
    opacity: 1;
}

/* node selection helper */
.node .node-select-helper {
    /* opacity: 0; */
    fill: transparent;
    stroke: transparent;
    /* stroke: red; */
    stroke-width: 1px;
}

/* nodemarks */
.nodemark {
    transition: 0.1s;
    fill: rgb(0, 131, 120);
    opacity: 1;
    transform-origin: 50 50;

    .leaf & {
        /* fill: rgb(191, 218, 215); */
        /* fill: white;
        stroke: rgb(0, 131, 120);
        stroke-width: 1px; */
        opacity: 1;
    }
    .branch.expanded & {
        transform: rotate(90deg);
    }
}

//tree wit different orientation

// opposite direction for right-aligned nodemark
.right-aligned.tree {
    .nodemark {
        transform: rotate(180deg);
    }
    .branch.expanded .nodemark {
        transform: rotate(90deg);
    }
}

// tilted texts in matrix column header
.horizontal.tree {
    text, .nodemark {
        transform: rotate(25deg);
    }
    .branch.expanded .nodemark {
        transform: rotate(90deg);
    }
    .node-select-helper {
        transform-origin: 12px 8px;
        transform: rotate(25deg);
    }
}

/* mappings */
.mapLine {
    fill: none;
    opacity: 1;
    .mapLine-fg {
        stroke: $primary-color;
        stroke-width: 1.5px;
        /* stroke-linecap: round; */
    }
    .mapLine-bg {
        stroke: white;
        stroke-width: 4.5px;
    }
    .mapLine-select-helper {
        /* stroke: yellow; */
        stroke: transparent;
        stroke-width: 10px;
    }
    .mapLine-endpoint { //TODO: delete if not needed
        fill: none;
        stroke: red;
        opacity: 1;
    }
}
.mapCell {
    fill: rgb(20, 165, 153);
    stroke: white;
    stroke-width: 1px;
    opacity: 1;
}

/* matrix table background */
.bg-grid {
    stroke: white;
    stroke-width: 1px;
    fill: #f6f6f6;
}
.mapCell-guide {
    fill: white;
    opacity: 0.6;
}



//highlight and muted
.muted {
    opacity: 0.5;
}

.highlight {
    opacity: 1;
    text {
        font-weight: bold;
    }
    &.mapLine {
        .mapLine-fg {
            stroke: $primary-color;
            stroke-width: 4px;
        }
        .mapLine-bg {
            stroke-width: 7px;
        }
    }
    // // why at wrong position even with transform-origin?
    // &.mapCell {
    //     fill: rgb(240, 96, 0);
    //     transform: scale(1.5);
    // }
}

// for mappings to nodes collapsed under their parent
.map-to-collapsed {
    & .mapLine-fg {
        stroke-dasharray: 3 2;
        // stroke-dasharray: 0 3;
        // stroke-linecap: round;
    }
    &.highlight .mapLine-fg {
        stroke-dasharray: 5 3;
        // stroke-dasharray: 0 7;
        // stroke-linecap: round;
    }
    &.mapCell {
        fill: url(#pattern-dot);
        // fill: orange;
    }
}

#pattern-dot-rect {
    fill: $primary-color;
}